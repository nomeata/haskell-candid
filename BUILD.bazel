load("@rules_haskell//haskell:defs.bzl", "haskell_library")
haskell_library(
    name = "candid",
    srcs = [
      "src/Codec/Candid/Infer.hs",
      "src/Codec/Candid/TypTable.hs",
      "src/Codec/Candid/Decode.hs",
      "src/Codec/Candid/Subtype.hs",
      "src/Codec/Candid/Parse.hs",
      "src/Codec/Candid/FieldName.hs",
      "src/Codec/Candid/TH.hs",
      "src/Codec/Candid/Types.hs",
      "src/Codec/Candid/Data.hs",
      "src/Codec/Candid/Coerce.hs",
      "src/Codec/Candid/Service.hs",
      "src/Codec/Candid/EncodeTextual.hs",
      "src/Codec/Candid/Tuples.hs",
      "src/Codec/Candid/Generic.hs",
      "src/Codec/Candid/Hash.hs",
      "src/Codec/Candid/Encode.hs",
      "src/Codec/Candid/Class.hs",
      "src/Codec/Candid/TestExports.hs",
      "src/Codec/Candid.hs",
    ],
    src_strip_prefix = "src",
    deps = [
        "@stackage//:base",
        "@stackage//:digest",
        "@stackage//:text",
        "@stackage//:dlist",
        "@stackage//:vector",
        "@stackage//:bytestring",
        "@stackage//:mtl",
        "@stackage//:transformers",
        "@stackage//:hex-text",
        "@stackage//:megaparsec",
        "@stackage//:parser-combinators",
        "@stackage//:scientific",
        "@stackage//:cereal",
        "@stackage//:leb128-cereal",
        "@stackage//:containers",
        "@stackage//:unordered-containers",
        "@stackage//:row-types",
        "@stackage//:constraints",
        "@stackage//:prettyprinter",
        "@stackage//:template-haskell",
        "@stackage//:base32",
        "@stackage//:split",
        "@stackage//:file-embed",
    ],
    visibility = ["//visibility:public"],
)
